# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  # See the Node orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@5.2
  # The S3 orb will setup the aws-cli and quickly copy or sync anything to s3.
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/aws-s3
  # NOTE: Environment variables containing the necessary secrets can be setup in the CircleCI UI
  # See here https://circleci.com/docs/set-environment-variable/#set-an-environment-variable-in-a-project
  aws-s3: circleci/aws-s3@4.0

# Define a job for running tests
jobs:
  test:
    docker:
      - image: cimg/node:15.1
    steps:
      - checkout
      - node/install-packages
      - run:
          command: npm run test
          name: Run tests

# Define a job for building and deploying the application
jobs:
  build-and-deploy:
    docker:
      - image: cimg/node:15.1
    steps:
      - checkout
      - node/install-packages
      - run:
          command: npm run build
          name: Build application
      - aws-s3/sync:
          from: dist/
          to: s3://sample-app-vue
          arguments: --delete
      - run:
          command: |
            npm run deploy
          name: Deploy application

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test
      - build-and-deploy:
          requires:
            - test
          filters:
            branches:
              only: main